{"ast":null,"code":"var _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/App.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from './store/index'; //Component\n\nimport Navbar from './components/layout/Navbar';\nimport ShopList from './components/ShopDefaultList';\nimport ShopListPreferred from './components/ShopListPreferred';\nimport Register from \"./components/authentification/Register\";\nimport LoginModal from './components/authentification/LoginModal'; //Actions\n\nimport { _loadUser } from \"./actions/auth\"; //Utils\n\nimport configTokenInHeader from \"./utils/configTokenInHeader\"; //Routing\n\nimport Routes from './routing/routes';\n\nif (localStorage.token) {\n  configTokenInHeader(localStorage.token);\n}\n\nconst App = props => {\n  console.log('App component: ', props); // Hook react : componentDidUpdate/componentDidUpdate/componentWillUnmount\n\n  useEffect(() => {\n    store.dispatch(_loadUser());\n  }, []); //[]=> exécuter un effet une seule fois (au montage puis au démontage\n\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Route, {\n    component: Routes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(LoginModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/App.js"],"names":["React","Fragment","useEffect","BrowserRouter","Router","Route","Switch","Provider","store","Navbar","ShopList","ShopListPreferred","Register","LoginModal","_loadUser","configTokenInHeader","Routes","localStorage","token","App","props","console","log","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,QAAP,MAAqB,wCAArB;AACA,OAAOC,UAAP,MAAuB,0CAAvB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,gBAA1B,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,6BAAhC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAGA,IAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBH,EAAAA,mBAAmB,CAACE,YAAY,CAACC,KAAd,CAAnB;AAED;;AAGD,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAGvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BF,KAA9B,EAHuB,CAMrB;;AACAlB,EAAAA,SAAS,CAAC,MAAI;AACZM,IAAAA,KAAK,CAACe,QAAN,CAAeT,SAAS,EAAxB;AAED,GAHQ,EAGN,EAHM,CAAT,CAPqB,CAUb;;AAIR,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAME,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF,CADF;AAeD,CA7BD;;AAyCA,eAAeG,GAAf","sourcesContent":["import React,{ Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from './store/index';\n\n//Component\nimport Navbar from './components/layout/Navbar';\nimport ShopList from './components/ShopDefaultList';\nimport ShopListPreferred from './components/ShopListPreferred';\nimport Register from \"./components/authentification/Register\";\nimport LoginModal from './components/authentification/LoginModal';\n\n//Actions\nimport { _loadUser } from \"./actions/auth\";\n//Utils\nimport configTokenInHeader from \"./utils/configTokenInHeader\";\n//Routing\nimport Routes from './routing/routes';\n\n\nif (localStorage.token) {\n  configTokenInHeader(localStorage.token);\n\n}\n\n\nconst App = (props) => {\n\n\nconsole.log('App component: ',props)\n\n\n  // Hook react : componentDidUpdate/componentDidUpdate/componentWillUnmount\n  useEffect(()=>{\n    store.dispatch(_loadUser() );\n\n  }, []); //[]=> exécuter un effet une seule fois (au montage puis au démontage\n\n\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n\n          <Switch>\n            <Route component={Routes} />\n            \n          </Switch>\n          <LoginModal />\n\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n}\n\n\n\n\n\n\n\n\n  \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}