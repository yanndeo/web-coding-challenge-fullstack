{"ast":null,"code":"var _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/App.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport store from './store/index'; //Utils\n\nimport configTokenInHeader from \"./utils/configTokenInHeader\";\nimport ErrorBoundary from \"./utils/ErrorBoundary\"; //Routing\n\nimport Routes from './routing/routes'; //Component\n\nimport LoginModal from './components/authentification/LoginModal'; //Actions\n\nimport { _loadUser } from \"./actions/auth\";\n\nif (localStorage.token) {\n  configTokenInHeader(localStorage.token);\n}\n\nconst App = ({\n  _loadUser\n}) => {\n  useEffect(() => {\n    _loadUser();\n  }, [_loadUser]); //[]=> exécuter un effet une seule fois au montage puis au démontage.\n\n  return React.createElement(ErrorBoundary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Route, {\n    component: Routes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })))));\n}; //export default App\n\n\nexport default connect(null, {\n  _loadUser\n})(App);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/App.js"],"names":["React","Fragment","useEffect","BrowserRouter","Router","Route","Switch","Provider","connect","store","configTokenInHeader","ErrorBoundary","Routes","LoginModal","_loadUser","localStorage","token","App"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,eAAlB,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;AACA,OAAOC,aAAP,MAA0B,uBAA1B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,kBAAnB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,0CAAvB,C,CACA;;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAGA,IAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBN,EAAAA,mBAAmB,CAACK,YAAY,CAACC,KAAd,CAAnB;AAAyC;;AAI3C,MAAMC,GAAG,GAAG,CAAC;AAACH,EAAAA;AAAD,CAAD,KAAiB;AAG3BZ,EAAAA,SAAS,CAAC,MAAI;AACZY,IAAAA,SAAS;AAEV,GAHQ,EAGP,CAACA,SAAD,CAHO,CAAT,CAH2B,CAMX;;AAGhB,SAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEF,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADJ,CAFF;AAcD,CAvBD,C,CA0BA;;;AACA,eAAeJ,OAAO,CAAC,IAAD,EAAO;AAACM,EAAAA;AAAD,CAAP,CAAP,CAA2BG,GAA3B,CAAf","sourcesContent":["import React,{ Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { connect } from \"react-redux\";\n\nimport store from './store/index';\n//Utils\nimport configTokenInHeader from \"./utils/configTokenInHeader\";\nimport ErrorBoundary from \"./utils/ErrorBoundary\";\n//Routing\nimport Routes from './routing/routes';\n//Component\nimport LoginModal from './components/authentification/LoginModal';\n//Actions\nimport { _loadUser } from \"./actions/auth\";\n\n\nif (localStorage.token) {\n  configTokenInHeader(localStorage.token);}\n\n\n\nconst App = ({_loadUser}) => {\n\n\n  useEffect(()=>{\n    _loadUser();\n\n  },[_loadUser]); //[]=> exécuter un effet une seule fois au montage puis au démontage.\n \n\n  return (\n\n    <ErrorBoundary>\n        <Router>\n          <Fragment>  \n            <Switch>\n              <Route component={Routes} />\n            </Switch>\n          </Fragment>\n\n        </Router>\n    </ErrorBoundary>\n\n  );\n}\n\n\n//export default App\nexport default connect(null, {_loadUser})(App);\n"]},"metadata":{},"sourceType":"module"}