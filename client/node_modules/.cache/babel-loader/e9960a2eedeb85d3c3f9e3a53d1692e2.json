{"ast":null,"code":"import _objectWithoutProperties from \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/routing/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { PropTypes } from \"prop-types\";\nimport { _setAlert } from '../actions/alert';\n/**\n * \n * Define HOC component to handle private routes\n */\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      _ref$auth = _ref.auth,\n      isAuthentificated = _ref$auth.isAuthentificated,\n      loading = _ref$auth.loading,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"auth\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthentificated && !loading ? React.createElement(Redirect, {\n      back: true,\n      to: {\n        pathname: '/default-page',\n        attempt: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }) : React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nconsole.log(props.isAuthentificated); //Required auth \n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n  _setAlert: PropTypes.func.isRequired\n}; //Check auth from store redux\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  _setAlert\n})(PrivateRoute);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/routing/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","_setAlert","PrivateRoute","Component","component","auth","isAuthentificated","loading","rest","props","pathname","attempt","console","log","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAGA;;;;;AAIA,MAAMC,YAAY,GAAG;AAAA,MACLC,SADK,QAChBC,SADgB;AAAA,uBAEjBC,IAFiB;AAAA,MAETC,iBAFS,aAETA,iBAFS;AAAA,MAEUC,OAFV,aAEUA,OAFV;AAAA,MAGdC,IAHc;;AAAA,SAMjB,oBAAC,KAAD,oBACQA,IADR;AAEQ,IAAA,MAAM,EACFC,KAAK,IAAI,CAACH,iBAAD,IAAsB,CAACC,OAAvB,GAGL,oBAAC,QAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE;AACAG,QAAAA,QAAQ,EAAE,eADV;AAEAC,QAAAA,OAAO,EAAE;AAFT,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHK,GAYH,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAflB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANiB;AAAA,CAArB;;AA6BAG,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACH,iBAAlB,E,CAGA;;AACAJ,YAAY,CAACY,SAAb,GAAyB;AACvBT,EAAAA,IAAI,EAAEL,SAAS,CAACe,MAAV,CAAiBC,UADA;AAEvBf,EAAAA,SAAS,EAAED,SAAS,CAACiB,IAAV,CAAeD;AAFH,CAAzB,C,CAKA;;AACA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADoB,CAAZ,CAAxB;;AAGA,eAAeN,OAAO,CAACmB,eAAD,EAAiB;AAACjB,EAAAA;AAAD,CAAjB,CAAP,CAAsCC,YAAtC,CAAf","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { PropTypes } from \"prop-types\";\nimport { _setAlert } from '../actions/alert';\n\n\n/**\n * \n * Define HOC component to handle private routes\n */\nconst PrivateRoute = ({\n     component: Component,\n    auth: { isAuthentificated, loading }, \n    ...rest }) => (\n\n\n    <Route \n        {...rest} \n            render={ \n                props => !isAuthentificated && !loading\n                 ?\n                    (\n                    <Redirect\n                        back\n                        to={{\n                            pathname: '/default-page',\n                            attempt: true  \n                        }}\n                    /> \n                    )\n                 :\n                    ( <Component {...props} /> ) \n                \n                 }\n     />\n\n\n);\n\nconsole.log(props.isAuthentificated)\n\n\n//Required auth \nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n  _setAlert: PropTypes.func.isRequired,\n};\n\n//Check auth from store redux\nconst mapStateToProps = (state) => ({\n    auth: state.auth \n})\nexport default connect(mapStateToProps,{_setAlert} )(PrivateRoute);"]},"metadata":{},"sourceType":"module"}