{"ast":null,"code":"import axios from 'axios';\nimport { GET_DEFAULT_LIST_SHOPS, GET_PREFERRED_SHOPS, GET_NEARBY_SHOPS, REMOVE_SHOPS_USER_RELATED, SUCCESS_OR_ERROR_SHOPS } from \"./types\"; //Utils\n\nimport { API_URI } from '../utils/uri';\nimport configTokenInHeader from \"../utils/configTokenInHeader\";\nimport { configHeadersIfOrNotToken } from \"../utils/configHeadersIfOrNotToken\"; //Ohers actions\n\nimport { _setAlert } from \"./alert\";\n/**\n * Default shop list.\n * without criterias\n */\n\nexport const _getDefaultShopList = () => async dispatch => {\n  try {\n    const response = await axios.get(\"\".concat(API_URI, \"/shops/default\"));\n    dispatch({\n      type: GET_DEFAULT_LIST_SHOPS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ERROR_SHOPS,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n};\n/**\n * Get preferred shop of user connected\n * user must connected\n */\n\nexport const _getMyPreferredShops = () => async dispatch => {\n  if (localStorage.token) {\n    configTokenInHeader(localStorage.token); //set header request\n  }\n\n  try {\n    const response = await axios.get(\"\".concat(API_URI, \"/shops/preferred\"));\n    dispatch({\n      type: GET_PREFERRED_SHOPS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ERROR_SHOPS,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n};\n/**\n * Like a shop\n */\n\nexport const _likeShop = shopID => async (dispatch, getState) => {\n  try {\n    const response = await axios.put(\"\".concat(API_URI, \"/shops/like/\").concat(shopID), configHeadersIfOrNotToken(getState));\n    console.log(response);\n    dispatch(_getMyPreferredShops()); //ici ou dans App?\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ERROR_SHOPS,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/actions/shop.js"],"names":["axios","GET_DEFAULT_LIST_SHOPS","GET_PREFERRED_SHOPS","GET_NEARBY_SHOPS","REMOVE_SHOPS_USER_RELATED","SUCCESS_OR_ERROR_SHOPS","API_URI","configTokenInHeader","configHeadersIfOrNotToken","_setAlert","_getDefaultShopList","dispatch","response","get","type","payload","data","error","console","log","ERROR_SHOPS","msg","statusText","status","_getMyPreferredShops","localStorage","token","_likeShop","shopID","getState","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,sBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,yBAJF,EAKIC,sBALJ,QAMO,SANP,C,CAOA;;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,SAASC,yBAAT,QAA0C,oCAA1C,C,CAEA;;AACA,SAASC,SAAT,QAA0B,SAA1B;AAKA;;;;;AAIA,OAAO,MAAMC,mBAAmB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAEvD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,WAAaP,OAAb,oBAAvB;AAEAK,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEb,sBADC;AAEPc,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,KAAD,CAAR;AAKH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEM,WADD;AAELL,MAAAA,OAAO,EAAE;AAAEM,QAAAA,GAAG,EAAEJ,KAAK,CAACL,QAAN,CAAeU,UAAtB;AAAkCC,QAAAA,MAAM,EAAEN,KAAK,CAACL,QAAN,CAAeW;AAAzD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAlBM;AAsBP;;;;;AAIA,OAAO,MAAMC,oBAAoB,GAAG,MAAM,MAAMb,QAAN,IAAkB;AAExD,MAAIc,YAAY,CAACC,KAAjB,EAAwB;AACpBnB,IAAAA,mBAAmB,CAACkB,YAAY,CAACC,KAAd,CAAnB,CADoB,CACuB;AAC9C;;AAED,MAAI;AACA,UAAMd,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,WAAaP,OAAb,sBAAvB;AAEAK,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACZ,mBADA;AAELa,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFb,KAAD,CAAR;AAKH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACM,WADA;AAELL,MAAAA,OAAO,EAAE;AAAEM,QAAAA,GAAG,EAAEJ,KAAK,CAACL,QAAN,CAAeI,IAAf,CAAoBK,GAA3B;AAAiCE,QAAAA,MAAM,EAAEN,KAAK,CAACL,QAAN,CAAeW;AAAxD;AAFJ,KAAD,CAAR;AAKH;AAEJ,CAxBM;AA2BP;;;;AAGA,OAAO,MAAMI,SAAS,GAAIC,MAAD,IAAY,OAAOjB,QAAP,EAAiBkB,QAAjB,KAA6B;AAE9D,MAAI;AACA,UAAMjB,QAAQ,GAAG,MAAMZ,KAAK,CAAC8B,GAAN,WAAaxB,OAAb,yBAAmCsB,MAAnC,GAA6CpB,yBAAyB,CAACqB,QAAD,CAAtE,CAAvB;AAEAX,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAD,IAAAA,QAAQ,CAACa,oBAAoB,EAArB,CAAR,CAJA,CAIkC;AAGrC,GAPD,CAOE,OAAOP,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEM,WADD;AAELL,MAAAA,OAAO,EAAE;AAAEM,QAAAA,GAAG,EAAEJ,KAAK,CAACL,QAAN,CAAeI,IAAf,CAAoBK,GAA3B;AAAgCE,QAAAA,MAAM,EAAEN,KAAK,CAACL,QAAN,CAAeW;AAAvD;AAFJ,KAAD,CAAR;AAOH;AAEJ,CArBM","sourcesContent":["import axios from 'axios';\nimport {\n  GET_DEFAULT_LIST_SHOPS,\n  GET_PREFERRED_SHOPS,\n  GET_NEARBY_SHOPS,\n  REMOVE_SHOPS_USER_RELATED,\n    SUCCESS_OR_ERROR_SHOPS\n} from \"./types\";\n//Utils\nimport { API_URI } from '../utils/uri';\nimport configTokenInHeader from \"../utils/configTokenInHeader\";\nimport { configHeadersIfOrNotToken } from \"../utils/configHeadersIfOrNotToken\";\n\n//Ohers actions\nimport { _setAlert } from \"./alert\";\n\n\n\n\n/**\n * Default shop list.\n * without criterias\n */\nexport const _getDefaultShopList = () => async dispatch => {\n\n    try {\n        const response = await axios.get(`${API_URI}/shops/default`);\n\n        dispatch({\n          type: GET_DEFAULT_LIST_SHOPS,\n          payload: response.data\n        });  \n\n    } catch (error) {\n        console.log(error);\n\n        dispatch({\n            type: ERROR_SHOPS,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        })\n    }\n};\n\n\n\n/**\n * Get preferred shop of user connected\n * user must connected\n */\nexport const _getMyPreferredShops = () => async dispatch => {\n\n    if (localStorage.token) {\n        configTokenInHeader(localStorage.token);   //set header request\n    }\n\n    try {\n        const response = await axios.get(`${API_URI}/shops/preferred`);\n\n        dispatch({\n            type:GET_PREFERRED_SHOPS,\n            payload: response.data\n        });\n\n    } catch (error) {\n        console.log(error);\n\n        dispatch({\n            type:ERROR_SHOPS,\n            payload: { msg: error.response.data.msg , status: error.response.status }\n        });\n\n    }\n\n};\n\n\n/**\n * Like a shop\n */\nexport const _likeShop = (shopID) => async (dispatch, getState) =>{\n\n    try {\n        const response=  await axios.put(`${API_URI}/shops/like/${shopID}`, configHeadersIfOrNotToken(getState));\n\n        console.log(response)\n        dispatch(_getMyPreferredShops()); //ici ou dans App?\n\n\n    } catch (error) {\n        console.log(error);\n\n        dispatch({\n            type: ERROR_SHOPS,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        });\n\n\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}