{"ast":null,"code":"var _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/ShopListPreferred.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\"; //Component\n\nimport ShopItem from \"./ShopItem\";\nimport AlertNotification from \"./layout/AlertNotification\"; //Actions\n\nimport { _setAlert } from '../actions/alert';\nimport { _getMyPreferredShops, _removeShop } from \"../actions/shop\";\nimport SpinnerLoader from './layout/SpinnerLoader';\n\nconst ShopListPreferred = ({\n  shops,\n  loading,\n  _setAlert,\n  _getMyPreferredShops,\n  _removeShop,\n  status,\n  errors\n}) => {\n  /**\n   * Hook React \n   * Define lifecycle component() \n   */\n  useEffect(() => {\n    //Define page's title\n    document.title = \"Preferred Shop\"; //Load default data shop list\n\n    _getMyPreferredShops();\n\n    console.log('mvmt');\n  }, []);\n  /**\n   * Second hook to handle \n   * remove actions\n   */\n\n  useEffect(() => {\n    if (status.status === 200) {\n      _setAlert(status.msg, \"success\");\n    }\n\n    if (status.msg !== null && status.status === 400) {\n      _setAlert(status.msg, \"dark\");\n    }\n\n    if (status.msg !== null && status.status === 404) {\n      _setAlert(status.msg, \"danger\");\n    }\n\n    if (status.msg !== null && status.status === 500) {\n      _setAlert('Echec', \"danger\");\n    }\n  }, [status]);\n  /**\n  * Remove A SHOP from prefrerred list\n  */\n\n  const handleRemoveShopFromPreferredList = async (e, id) => {\n    e.preventDefault();\n    console.log(id);\n    await _removeShop(id);\n    await _getMyPreferredShops();\n  };\n  /**\n   * Define () that return shops list nearby of user\n   * from store \n   */\n\n\n  const renderShopList = () => {\n    if (shops === null) {\n      _setAlert(errors.msg, 'primary');\n    } else {\n      return shops.map((shop, id) => {\n        return React.createElement(ShopItem, {\n          key: id,\n          shop: shop,\n          preferred: true,\n          handleRemoveCallback: handleRemoveShopFromPreferredList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      });\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(AlertNotification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"site-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row col-md-12 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, !loading ? renderShopList() : React.createElement(SpinnerLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }))))));\n};\n\nShopListPreferred.propTypes = {\n  _setAlert: PropTypes.func.isRequired,\n  _getMyPreferredShops: PropTypes.func.isRequired,\n  _removeShop: PropTypes.func,\n  shops: PropTypes.array,\n  loading: PropTypes.bool,\n  errors: PropTypes.object //isAuthentificated: PropTypes.func.isRequired,\n\n}; // mappons le state dans les props du component\n\nconst mapStateToProps = state => ({\n  shops: state.shop.preferred_shops,\n  loading: state.shop.loading,\n  errors: state.shop.errors,\n  //isAuthentificated: state.auth.isAuthentificated, //user already authentificated with private route\n  status: state.shop.status\n});\n\nexport default connect(mapStateToProps, {\n  _getMyPreferredShops,\n  _setAlert,\n  _removeShop\n})(ShopListPreferred);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/ShopListPreferred.js"],"names":["React","Fragment","useEffect","connect","PropTypes","ShopItem","AlertNotification","_setAlert","_getMyPreferredShops","_removeShop","SpinnerLoader","ShopListPreferred","shops","loading","status","errors","document","title","console","log","msg","handleRemoveShopFromPreferredList","e","id","preventDefault","renderShopList","map","shop","propTypes","func","isRequired","array","bool","object","mapStateToProps","state","preferred_shops"],"mappings":"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","sourcesContent":["\nimport React, { Fragment, useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n//Component\nimport ShopItem from \"./ShopItem\";\nimport AlertNotification from \"./layout/AlertNotification\";\n//Actions\nimport { _setAlert } from '../actions/alert';\nimport { _getMyPreferredShops, _removeShop } from \"../actions/shop\";\nimport SpinnerLoader from './layout/SpinnerLoader';\n\n\n\nconst ShopListPreferred = ({ shops, loading, _setAlert, _getMyPreferredShops, _removeShop, status, errors }) => {\n\n    /**\n     * Hook React \n     * Define lifecycle component() \n     */\n    useEffect(() => {\n\n        //Define page's title\n        document.title = `Preferred Shop`;\n\n        //Load default data shop list\n            _getMyPreferredShops();\n\n        console.log('mvmt')\n\n    }, []) \n\n\n\n    /**\n     * Second hook to handle \n     * remove actions\n     */\n    useEffect(() => {\n\n      \n\n        if (status.status === 200) {\n            _setAlert(status.msg, \"success\");\n\n        }\n\n        if (status.msg !== null && status.status === 400) {\n            _setAlert(status.msg, \"dark\");\n        }\n\n        if (status.msg !== null && status.status === 404) {\n            _setAlert(status.msg, \"danger\");\n\n        }\n        if (status.msg !== null && status.status === 500 ) {\n            _setAlert('Echec', \"danger\");\n\n        }\n\n    }, [status]); \n\n\n\n    /**\n    * Remove A SHOP from prefrerred list\n    */\n    const handleRemoveShopFromPreferredList = async (e, id) => {\n        e.preventDefault();\n        console.log(id)\n       await _removeShop(id);\n\n       await _getMyPreferredShops()\n\n\n    };\n\n    /**\n     * Define () that return shops list nearby of user\n     * from store \n     */\n    const renderShopList = () => {\n\n        if(shops === null){\n             _setAlert(errors.msg, 'primary');\n\n        }else{\n            return shops.map((shop, id) => {\n                return <ShopItem\n                    key={id}\n                    shop={shop}\n                    preferred={true}\n                    handleRemoveCallback={handleRemoveShopFromPreferredList}\n                />\n\n            })  \n        }\n       \n    };\n\n\n\n\n    return (\n\n        <Fragment>\n\n            <AlertNotification />\n\n            <div className=\"site-section\">\n                <div className=\"container\">\n                    <div className=\"row\">\n\n                        <div className=\"row col-md-12 \">\n\n                            { !loading ? renderShopList() : <SpinnerLoader/> }\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\n\nShopListPreferred.propTypes = {\n    _setAlert: PropTypes.func.isRequired,\n    _getMyPreferredShops: PropTypes.func.isRequired,\n    _removeShop: PropTypes.func,\n    shops: PropTypes.array,\n    loading: PropTypes.bool,\n    errors:PropTypes.object,\n    //isAuthentificated: PropTypes.func.isRequired,\n    \n\n};\n\n\n// mappons le state dans les props du component\nconst mapStateToProps = state => ({\n  shops: state.shop.preferred_shops,\n  loading: state.shop.loading,\n  errors: state.shop.errors,\n  //isAuthentificated: state.auth.isAuthentificated, //user already authentificated with private route\n  status: state.shop.status\n});\n\nexport default connect(mapStateToProps, { _getMyPreferredShops, _setAlert,_removeShop })(ShopListPreferred);\n"]},"metadata":{},"sourceType":"module"}