{"ast":null,"code":"var _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/ShopListPreferred.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\"; //Component\n\nimport ShopItem from \"./ShopItem\";\nimport AlertNotification from \"./layout/AlertNotification\"; //Actions\n\nimport { _setAlert } from '../actions/alert';\nimport { _getMyPreferredShops, _removeShop } from \"../actions/shop\";\n\nconst ShopListPreferred = ({\n  shops,\n  loading,\n  _setAlert,\n  _getMyPreferredShops,\n  _removeShop,\n  status,\n  errors\n}) => {\n  /**\n   * Hook React \n   * Define lifecycle component() and\n   */\n  useEffect(() => {\n    //Define page's title\n    document.title = \"Preferred Shop\"; //Load default data shop list\n\n    _getMyPreferredShops();\n\n    console.log('mvmt');\n  }, []); //=> specify just for mount and unmount()\n\n  /**\n   * Second hook to handle \n   * like/unlike/remove actions\n   */\n\n  useEffect(() => {\n    if (status.msg !== null && status.status === 409) {\n      _setAlert(status.msg, \"dark\");\n    }\n\n    if (status.status === 200) {\n      _setAlert(\"Success: successful operation... \", \"success\");\n    }\n\n    if (status.msg !== null && status.status === 404) {\n      _setAlert(status.msg, \"danger\");\n    }\n\n    if (status.msg !== null && status.status === 500) {\n      _setAlert('Echec', \"danger\");\n    }\n  }, [status]);\n  /**\n  * Remove A SHOP from prefrerred list\n  * if isAuthentificated: false => call _setAlert() \n  * else call _removeshop()\n  */\n\n  const handleRemoveShopFromPreferredList = async (e, id) => {\n    e.preventDefault();\n    console.log(id);\n\n    _removeShop(id);\n  };\n  /**\n   * Define () that return shops list nearby of user\n   * from store \n   */\n\n\n  const renderShopList = () => {\n    return shops.map((shop, id) => {\n      return React.createElement(ShopItem, {\n        key: id,\n        shop: shop,\n        preferred: true,\n        handleRemoveCallback: handleRemoveShopFromPreferredList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      });\n    });\n  };\n  /**\n   * Make a spinner for loading store is true\n   */\n\n\n  const renderSpinner = () => {\n    return React.createElement(\"div\", {\n      style: {\n        marginLeft: 473\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/images/spinner.gif\",\n      alt: \"spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }));\n  };\n  /**\n   * Handle content \n   * if shop is empty or not\n   * it loading is true or false\n   * component required be connected\n   */\n\n\n  const renderContent = () => {\n    if (!loading) {\n      if (shops === null) {\n        return _setAlert(errors.msg, 'primary');\n      } else {\n        return renderShopList();\n      }\n    } else {\n      renderSpinner();\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(AlertNotification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"site-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row col-md-12 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, renderContent())))));\n};\n\nShopListPreferred.propTypes = {\n  _setAlert: PropTypes.func.isRequired,\n  _getMyPreferredShops: PropTypes.func.isRequired,\n  _removeShop: PropTypes.func,\n  shops: PropTypes.array,\n  loading: PropTypes.bool,\n  errors: PropTypes.object //isAuthentificated: PropTypes.func.isRequired,\n\n}; // mappons le state dans les props du component\n\nconst mapStateToProps = state => ({\n  shops: state.shop.preferred_shops,\n  loading: state.shop.loading,\n  errors: state.shop.errors,\n  //isAuthentificated: state.auth.isAuthentificated, //user already authentificated with private route\n  status: state.shop.status\n});\n\nexport default connect(mapStateToProps, {\n  _getMyPreferredShops,\n  _setAlert,\n  _removeShop\n})(ShopListPreferred);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/ShopListPreferred.js"],"names":["React","Fragment","useEffect","connect","PropTypes","ShopItem","AlertNotification","_setAlert","_getMyPreferredShops","_removeShop","ShopListPreferred","shops","loading","status","errors","document","title","console","log","msg","handleRemoveShopFromPreferredList","e","id","preventDefault","renderShopList","map","shop","renderSpinner","marginLeft","renderContent","propTypes","func","isRequired","array","bool","object","mapStateToProps","state","preferred_shops"],"mappings":"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","sourcesContent":["\nimport React, { Fragment, useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n//Component\nimport ShopItem from \"./ShopItem\";\nimport AlertNotification from \"./layout/AlertNotification\";\n//Actions\nimport { _setAlert } from '../actions/alert';\nimport { _getMyPreferredShops, _removeShop } from \"../actions/shop\";\n\n\n\nconst ShopListPreferred = ({ shops, loading, _setAlert, _getMyPreferredShops, _removeShop, status, errors }) => {\n\n    /**\n     * Hook React \n     * Define lifecycle component() and\n     */\n    useEffect(() => {\n\n        //Define page's title\n        document.title = `Preferred Shop`;\n\n        //Load default data shop list\n        _getMyPreferredShops();\n\n        console.log('mvmt')\n\n      \n\n    }, []) //=> specify just for mount and unmount()\n\n\n\n/**\n * Second hook to handle \n * like/unlike/remove actions\n */\n    useEffect(() => {\n\n        if (status.msg !== null && status.status === 409) {\n            _setAlert(status.msg, \"dark\");\n        }\n\n        if (status.status === 200) {\n            _setAlert(\"Success: successful operation... \", \"success\");\n\n        }\n\n        if (status.msg !== null && status.status === 404) {\n            _setAlert(status.msg, \"danger\");\n\n        }\n        if (status.msg !== null && status.status === 500) {\n            _setAlert('Echec', \"danger\");\n\n        }\n\n    }, [status]); \n\n\n\n    /**\n    * Remove A SHOP from prefrerred list\n    * if isAuthentificated: false => call _setAlert() \n    * else call _removeshop()\n    */\n    const handleRemoveShopFromPreferredList = async (e, id) => {\n        e.preventDefault();\n        console.log(id)\n        _removeShop(id)\n\n    };\n\n    /**\n     * Define () that return shops list nearby of user\n     * from store \n     */\n    const renderShopList = () => {\n        return shops.map((shop, id) => {\n            return <ShopItem \n                        key={id} \n                        shop={shop} \n                        preferred={true}\n                        handleRemoveCallback={handleRemoveShopFromPreferredList}\n                    />\n\n        })    \n    };\n\n    /**\n     * Make a spinner for loading store is true\n     */\n    const renderSpinner = () => {\n        return (<div style={{ marginLeft: 473, }}>\n            <img src=\"/images/spinner.gif\" alt=\"spinner\" />\n        </div>)\n    }\n\n\n\n\n\n\n\n    /**\n     * Handle content \n     * if shop is empty or not\n     * it loading is true or false\n     * component required be connected\n     */\n\n    const renderContent = ()=>{\n\n        if(!loading){\n\n            if (shops === null ) {\n                 return _setAlert(errors.msg, 'primary');\n\n            }else{\n                return renderShopList()\n            }\n\n        }else{\n            renderSpinner()\n        }\n       \n    }\n\n\n\n\n    return (\n\n        <Fragment>\n\n            <AlertNotification />\n\n            <div className=\"site-section\">\n                <div className=\"container\">\n                    <div className=\"row\">\n\n                        <div className=\"row col-md-12 \">\n                            { renderContent() }\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\n\nShopListPreferred.propTypes = {\n    _setAlert: PropTypes.func.isRequired,\n    _getMyPreferredShops: PropTypes.func.isRequired,\n    _removeShop: PropTypes.func,\n    shops: PropTypes.array,\n    loading: PropTypes.bool,\n    errors:PropTypes.object,\n    //isAuthentificated: PropTypes.func.isRequired,\n    \n\n};\n\n\n// mappons le state dans les props du component\nconst mapStateToProps = state => ({\n  shops: state.shop.preferred_shops,\n  loading: state.shop.loading,\n  errors: state.shop.errors,\n  //isAuthentificated: state.auth.isAuthentificated, //user already authentificated with private route\n  status: state.shop.status\n});\n\nexport default connect(mapStateToProps, { _getMyPreferredShops, _setAlert,_removeShop })(ShopListPreferred);\n"]},"metadata":{},"sourceType":"module"}