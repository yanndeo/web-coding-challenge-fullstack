{"ast":null,"code":"import _objectSpread from \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/authentification/LoginModal.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from \"reactstrap\"; //Components\n\nimport AlertNotification from '../layout/AlertNotification'; //Actions : _xxYYY\n\nimport { _setIsOpen } from \"../../actions/modal\";\nimport { _login } from '../../actions/auth';\n\nconst LoginModal = ({\n  isAuthentificated,\n  isOpen,\n  _setIsOpen,\n  _login\n}) => {\n  /**\n   * Hook: Definition of state : [state, setState ] =  useSate(initialize)\n   */\n  const _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formModalData = _useState2[0],\n        setFormModalData = _useState2[1]; // const { email, password } = this.state;\n\n\n  const email = formModalData.email,\n        password = formModalData.password;\n  /**\n   * close modal :\n   * send action redux\n   */\n\n  const toggle = () => {\n    _setIsOpen();\n  };\n  /**\n   * Maj state input fields text on change\n   */\n\n\n  const onChange = e => {\n    setFormModalData(_objectSpread({}, formModalData, {\n      [e.target.name]: e.target.value\n    }));\n  };\n  /**\n   * Call action redux to send request to \"/api/login\"\n   */\n\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    console.log(\"UserLogin:\", email, password);\n\n    _login(email, password);\n  };\n  /**\n   * Redirect if user logged in\n   */\n\n\n  if (isAuthentificated) {\n    console.log(\"auth?: \", isAuthentificated);\n    return React.createElement(Redirect, {\n      to: \"/mainpage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    });\n  }\n\n  console.log(\"modal\", isOpen);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: () => toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: () => toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \" \", \"SIGN IN\", \" \")), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(AlertNotification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(Form, {\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(Label, {\n    for: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"LOGIN\")))))));\n};\n\nLoginModal.propTypes = {\n  _setIsOpen: PropTypes.func.isRequired,\n  //action\n  _login: PropTypes.func.isRequired,\n  //action\n  isAuthentificated: PropTypes.bool,\n  //piece of store\n  isOpen: PropTypes.bool //piece of store\n\n}; // mappons le state dans les props du component.\n\nconst mapStateToProps = state => ({\n  isOpen: state.modal.isOpen,\n  isAuthentificated: state.auth.isAuthentificated\n});\n\nexport default connect(mapStateToProps, {\n  _setIsOpen,\n  _login\n})(LoginModal);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/authentification/LoginModal.js"],"names":["React","Fragment","useState","useEffect","connect","Redirect","PropTypes","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","AlertNotification","_setIsOpen","_login","LoginModal","isAuthentificated","isOpen","email","password","formModalData","setFormModalData","toggle","onChange","e","target","name","value","onSubmit","preventDefault","console","log","propTypes","func","isRequired","bool","mapStateToProps","state","modal","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState , useEffect} from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\n//Components\nimport AlertNotification from '../layout/AlertNotification';\n//Actions : _xxYYY\nimport { _setIsOpen } from \"../../actions/modal\";\nimport { _login } from '../../actions/auth';\n\n\n\nconst LoginModal = ({ isAuthentificated , isOpen, _setIsOpen , _login} ) => {\n                                                                              /**\n                                                                               * Hook: Definition of state : [state, setState ] =  useSate(initialize)\n                                                                               */\n                                                                              const [\n                                                                                formModalData,\n                                                                                setFormModalData\n                                                                              ] = useState(\n                                                                                {\n                                                                                  email:\n                                                                                    \"\",\n                                                                                  password:\n                                                                                    \"\"\n                                                                                }\n                                                                              );\n\n                                                                              // const { email, password } = this.state;\n                                                                              const {\n                                                                                email,\n                                                                                password\n                                                                              } = formModalData;\n\n                                                                              /**\n                                                                               * close modal :\n                                                                               * send action redux\n                                                                               */\n                                                                              const toggle = () => {\n                                                                                _setIsOpen();\n                                                                              };\n\n                                                                              /**\n                                                                               * Maj state input fields text on change\n                                                                               */\n                                                                              const onChange = e => {\n                                                                                setFormModalData(\n                                                                                  {\n                                                                                    ...formModalData,\n                                                                                    [e\n                                                                                      .target\n                                                                                      .name]:\n                                                                                      e\n                                                                                        .target\n                                                                                        .value\n                                                                                  }\n                                                                                );\n                                                                              };\n\n                                                                              /**\n                                                                               * Call action redux to send request to \"/api/login\"\n                                                                               */\n                                                                              const onSubmit = async e => {\n                                                                                e.preventDefault();\n                                                                                console.log(\n                                                                                  \"UserLogin:\",\n                                                                                  email,\n                                                                                  password\n                                                                                );\n                                                                                _login(\n                                                                                  email,\n                                                                                  password\n                                                                                );\n                                                                              };\n\n                                                                              /**\n                                                                               * Redirect if user logged in\n                                                                               */\n                                                                              if (\n                                                                                isAuthentificated\n                                                                              ) {\n                                                                                console.log(\n                                                                                  \"auth?: \",\n                                                                                  isAuthentificated\n                                                                                );\n                                                                                return (\n                                                                                  <Redirect to=\"/mainpage\" />\n                                                                                );\n                                                                              }\n\n                                                                              console.log(\n                                                                                \"modal\",\n                                                                                isOpen\n                                                                              );\n\n                                                                              return (\n                                                                                <Fragment>\n                                                                                  <div>\n                                                                                    <Modal\n                                                                                      isOpen={\n                                                                                        isOpen\n                                                                                      }\n                                                                                      toggle={() =>\n                                                                                        toggle()\n                                                                                      }\n                                                                                    >\n                                                                                      <ModalHeader\n                                                                                        toggle={() =>\n                                                                                          toggle()\n                                                                                        }\n                                                                                      >\n                                                                                        <span className=\"text-center\">\n                                                                                          {\" \"}\n                                                                                          SIGN\n                                                                                          IN{\" \"}\n                                                                                        </span>\n                                                                                      </ModalHeader>\n\n                                                                                      <ModalBody>\n                                                                                        {/** Connected to redux state global*/}\n                                                                                        <AlertNotification />\n\n                                                                                        <Form\n                                                                                          onSubmit={e =>\n                                                                                            onSubmit(\n                                                                                              e\n                                                                                            )\n                                                                                          }\n                                                                                        >\n                                                                                          <FormGroup>\n                                                                                            <Label for=\"email\">\n                                                                                              Email\n                                                                                            </Label>\n                                                                                            <Input\n                                                                                              type=\"email\"\n                                                                                              name=\"email\"\n                                                                                              placeholder=\"Email\"\n                                                                                              onChange={e =>\n                                                                                                onChange(\n                                                                                                  e\n                                                                                                )\n                                                                                              }\n                                                                                            />\n\n                                                                                            <Label for=\"name\">\n                                                                                              Password\n                                                                                            </Label>\n                                                                                            <Input\n                                                                                              type=\"password\"\n                                                                                              name=\"password\"\n                                                                                              placeholder=\"Password\"\n                                                                                              onChange={e =>\n                                                                                                onChange(\n                                                                                                  e\n                                                                                                )\n                                                                                              }\n                                                                                            />\n                                                                                            <br />\n\n                                                                                            <Button\n                                                                                              color=\"primary\"\n                                                                                              block={\n                                                                                                true\n                                                                                              }\n                                                                                            >\n                                                                                              LOGIN\n                                                                                            </Button>\n                                                                                          </FormGroup>\n                                                                                        </Form>\n                                                                                      </ModalBody>\n                                                                                    </Modal>\n                                                                                  </div>\n                                                                                </Fragment>\n                                                                              );\n                                                                            }\n\nLoginModal.propTypes = {\n    _setIsOpen: PropTypes.func.isRequired,     //action\n    _login: PropTypes.func.isRequired,        //action\n    isAuthentificated: PropTypes.bool,       //piece of store\n    isOpen:PropTypes.bool,                  //piece of store\n\n};\n\n// mappons le state dans les props du component.\nconst mapStateToProps = state => ({\n  isOpen: state.modal.isOpen,\n  isAuthentificated : state.auth.isAuthentificated\n});\n\nexport default connect(mapStateToProps, {_setIsOpen, _login})(LoginModal);"]},"metadata":{},"sourceType":"module"}