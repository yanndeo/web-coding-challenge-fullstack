{"ast":null,"code":"import _objectWithoutProperties from \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/routing/PrivateRoute.js\";\nimport React, { Fragment } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { PropTypes } from \"prop-types\";\nimport { _setAlert } from '../actions/alert';\nimport SubNavbar from '../components/layout/SubNavbar';\n/**\n * \n * Define HOC component to handle private routes\n */\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      auth = _ref.auth,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"auth\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => !props.isAuthentificated && !props.loading ? React.createElement(Redirect, {\n      to: {\n        pathname: '/',\n        attempt: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n}; //Required auth \n\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n  _setAlert: PropTypes.func.isRequired\n}; //Check auth from store redux\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  _setAlert\n})(PrivateRoute);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/routing/PrivateRoute.js"],"names":["React","Fragment","Route","Redirect","connect","PropTypes","_setAlert","SubNavbar","PrivateRoute","Component","component","auth","rest","props","isAuthentificated","loading","pathname","attempt","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AAGA;;;;;AAIA,MAAMC,YAAY,GAAG;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAAyBC,IAAzB,QAAyBA,IAAzB;AAAA,MAAmCC,IAAnC;;AAAA,SAEjB,oBAAC,KAAD,oBACQA,IADR;AAEQ,IAAA,MAAM,EACFC,KAAK,IAAI,CAACA,KAAK,CAACC,iBAAP,IAA4B,CAACD,KAAK,CAACE,OAAnC,GAGL,oBAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAC,QAAAA,QAAQ,EAAE,GADV;AAEAC,QAAAA,OAAO,EAAE;AAFT,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHK,GAWJ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFiB;AAAA,CAArB,C,CAwBA;;;AACAT,YAAY,CAACU,SAAb,GAAyB;AACvBP,EAAAA,IAAI,EAAEN,SAAS,CAACc,MAAV,CAAiBC,UADA;AAEvBd,EAAAA,SAAS,EAAED,SAAS,CAACgB,IAAV,CAAeD;AAFH,CAAzB,C,CAKA;;AACA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AADoB,CAAZ,CAAxB;;AAGA,eAAeP,OAAO,CAACkB,eAAD,EAAiB;AAAChB,EAAAA;AAAD,CAAjB,CAAP,CAAsCE,YAAtC,CAAf","sourcesContent":["import React, { Fragment} from 'react'\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { PropTypes } from \"prop-types\";\nimport { _setAlert } from '../actions/alert';\nimport SubNavbar from '../components/layout/SubNavbar';\n\n\n/**\n * \n * Define HOC component to handle private routes\n */\nconst PrivateRoute = ({ component: Component, auth , ...rest }) => (\n\n    <Route \n        {...rest} \n            render={ \n                props => !props.isAuthentificated && !props.loading\n                 ?\n                    (\n                    <Redirect\n                        to={{\n                            pathname: '/',\n                            attempt: true  \n                        }}\n                    /> \n                    )\n                 :\n                    (<Fragment>\n\n                    </Fragment>  ) \n                \n                 }\n     />\n);\n\n//Required auth \nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n  _setAlert: PropTypes.func.isRequired,\n};\n\n//Check auth from store redux\nconst mapStateToProps = (state) => ({\n    auth: state.auth \n})\nexport default connect(mapStateToProps,{_setAlert} )(PrivateRoute)"]},"metadata":{},"sourceType":"module"}