{"ast":null,"code":"import _objectSpread from \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/authentification/LoginModal.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from \"reactstrap\"; //Components\n\nimport AlertNotification from '../layout/AlertNotification'; //Actions : _xxYYY\n\nimport { _setIsOpen } from \"../../actions/modal\";\nimport { _login } from '../../actions/auth';\n\nconst LoginModal = ({\n  isAuthentificated,\n  isOpen,\n  _setIsOpen,\n  _login\n}) => {\n  //Hook: Definition of state : [state, setState ] =  useSate(initialize)\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formModalData = _useState2[0],\n        setFormModalData = _useState2[1];\n\n  useEffect(() => {\n    //Redirect if logged in\n    if (isAuthentificated) {\n      console.log('auth?: ', isAuthentificated);\n      return React.createElement(Redirect, {\n        to: \"/mainpage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n\n    ;\n  }, [isAuthentificated]); // const { email, password } = this.state;\n\n  const email = formModalData.email,\n        password = formModalData.password; //close modal : send action redux\n\n  const toggle = () => {\n    _setIsOpen();\n  }; //Maj state input fields text on change\n\n\n  const onChange = e => {\n    setFormModalData(_objectSpread({}, formModalData, {\n      [e.target.name]: e.target.value\n    }));\n  }; //Call action redux to send request to \"/api/login\"\n\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    console.log('UserLogin:', email, password);\n\n    _login(email, password);\n  };\n\n  console.log('modal', isOpen);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: () => toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: () => toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \" SIGN IN \")), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(AlertNotification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Form, {\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Label, {\n    for: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"LOGIN\")))))));\n};\n\nLoginModal.propTypes = {\n  _setIsOpen: PropTypes.func.isRequired,\n  //action\n  _login: PropTypes.func.isRequired,\n  //action\n  isAuthentificated: PropTypes.bool,\n  //piece of store\n  isOpen: PropTypes.bool //piece of store\n\n}; // mappons le state dans les props du component.\n\nconst mapStateToProps = state => ({\n  isOpen: state.modal.isOpen,\n  isAuthentificated: state.auth.isAuthentificated\n});\n\nexport default connect(mapStateToProps, {\n  _setIsOpen,\n  _login\n})(LoginModal);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/authentification/LoginModal.js"],"names":["React","Fragment","useState","useEffect","connect","Redirect","PropTypes","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","AlertNotification","_setIsOpen","_login","LoginModal","isAuthentificated","isOpen","email","password","formModalData","setFormModalData","console","log","toggle","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","modal","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState , useEffect} from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\n//Components\nimport AlertNotification from '../layout/AlertNotification';\n//Actions : _xxYYY\nimport { _setIsOpen } from \"../../actions/modal\";\nimport { _login } from '../../actions/auth';\n\n\n\nconst LoginModal = ({ isAuthentificated , isOpen, _setIsOpen , _login} ) => {\n\n\n    //Hook: Definition of state : [state, setState ] =  useSate(initialize)\n    const [formModalData, setFormModalData] = useState({\n        email: '',\n        password: '',\n    });\n\n    \n\n    useEffect(() => {\n        //Redirect if logged in\n        if (isAuthentificated) {\n            console.log('auth?: ', isAuthentificated)\n            return <Redirect to=\"/mainpage\" />\n        };\n\n    }, [isAuthentificated])\n\n    // const { email, password } = this.state;\n    const { email, password } = formModalData;\n\n\n    //close modal : send action redux\n    const toggle = () => {\n         _setIsOpen()\n     };\n\n\n    //Maj state input fields text on change\n    const onChange = (e) => {\n        setFormModalData({\n          ...formModalData,\n          [e.target.name]: e.target.value\n        });\n    };\n\n\n    //Call action redux to send request to \"/api/login\"\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        console.log('UserLogin:',email, password)\n        _login(email, password);\n\n    }\n\n    \n\n    console.log('modal', isOpen)\n\n    return (\n\n        <Fragment >\n            <div  >\n\n                <Modal isOpen={ isOpen } toggle={() => toggle()}  >\n\n                    <ModalHeader toggle={()=>toggle()} >\n                          <span className=\"text-center\"> SIGN IN </span>  \n                    </ModalHeader>\n\n                    <ModalBody>\n\n                        { /** Connected to redux state global*/}\n                        <AlertNotification/>\n\n                        <Form onSubmit={e => onSubmit(e)} >\n                            <FormGroup>\n\n                                <Label for=\"email\">Email</Label>\n                                <Input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                    onChange={(e)=>onChange(e) }\n                                />\n\n                                <Label for=\"name\">Password</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange={(e)=>onChange(e)}\n                                />\n                                <br/>\n\n                                <Button color=\"primary\"block={true}>\n                                    LOGIN\n                                </Button>\n\n                            </FormGroup>\n\n                        </Form>\n\n                        \n                    </ModalBody>\n                </Modal>\n            </div>\n        </Fragment>\n\n    );\n\n\n}\n\nLoginModal.propTypes = {\n    _setIsOpen: PropTypes.func.isRequired,  //action\n    _login: PropTypes.func.isRequired,      //action\n    isAuthentificated: PropTypes.bool,       //piece of store\n    isOpen:PropTypes.bool,                  //piece of store\n\n};\n\n// mappons le state dans les props du component.\nconst mapStateToProps = state => ({\n  isOpen: state.modal.isOpen,\n  isAuthentificated : state.auth.isAuthentificated\n});\n\nexport default connect(mapStateToProps, {_setIsOpen, _login})(LoginModal);"]},"metadata":{},"sourceType":"module"}