{"ast":null,"code":"var _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/shop/ShopList.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\"; //Component\n\nimport ShopItem from \"./ShopItem\";\nimport AlertNotification from \"../layout/AlertNotification\";\nimport SpinnerLoader from \"../layout/SpinnerLoader\"; //Actions\n\nimport { _setAlert } from '../../actions/alert';\nimport { _getDefaultShopList, _likeShop, _unLikeShop, _getMainShopList } from '../../actions/shop';\n/**\n * ShopList Component:\n * same Component for default-shop and main-shop\n * depending on whether the user is connected or not\n */\n\nconst ShopList = ({\n  _getDefaultShopList,\n  _getMainShopList,\n  _setAlert,\n  location,\n  default_shops,\n  main_shops,\n  loading,\n  _likeShop,\n  _unLikeShop,\n  status,\n  isAuthentificated\n}) => {\n  /**\n   * Hook React \n   * Define lifecycle component() and\n   */\n  useEffect(() => {\n    //Define page's title\n    if (isAuthentificated ? document.title = \"Main Page\" : document.title = \"Default Page\") ; //Load default data shop list\n\n    _getDefaultShopList();\n\n    _getMainShopList(); //Check if the user has been redirected after an unauthorized action\n\n\n    let hasAttempt = location.attempt;\n\n    if (hasAttempt) {\n      _setAlert(\"Unauthorized : You must first be connected\", \"warning\");\n    }\n  }, []); //=> specify just for mount and unmount()\n\n  /**\n  * Second hook to handle \n  * like/unlike actions\n  */\n\n  useEffect(() => {\n    //like or dislike\n    if (status.status === 200) {\n      _setAlert(\"Success: successful operation... \", \"success\");\n    } //Shop already like or dislike\n\n\n    if (status.msg !== null && status.status === 409) {\n      _setAlert(status.msg, \"dark\");\n    } //shop not exist\n\n\n    if (status.msg !== null && status.status === 404) {\n      _setAlert(status.msg, \"danger\");\n    } //Server error\n\n\n    if (status.msg !== null && status.status === 500) {\n      _setAlert('Echec', \"danger\");\n    }\n  }, [status, _setAlert]);\n  console.log('Attempted', location.attempt);\n  /**\n   * LIKE A SHOP\n   * if isAuthentificated: false => call _setAlert() \n   * else call _likeShop()\n   */\n\n  const handleLiked = (e, id) => {\n    // e.preventDefault();\n    console.log(id);\n\n    if (isAuthentificated) {\n      _likeShop(id);\n    } else {\n      _setAlert('Unauthorized : You must first be connect', 'warning');\n    }\n  };\n  /**\n   * UNLIKE A SHOP\n   * if isAuthentificated: false => call _setAlert() \n   * else call _unlikeShop()\n   */\n\n\n  const handleUnLiked = (e, id) => {\n    //e.preventDefault();\n    console.log(id);\n\n    if (isAuthentificated) {\n      _unLikeShop(id); //hide id\n\n    } else {\n      _setAlert('Unauthorized : You must first be connect', 'warning');\n    }\n  };\n  /**\n   * Define shop variable\n   * And value assignment\n   */\n\n\n  let shops = [];\n  if (isAuthentificated ? shops = main_shops : shops = default_shops) ;\n  /**\n   * Define () that return \n   * all shops list default from store OR\n   * all shops list without the shops already liked\n   */\n\n  const renderShopItem = () => {\n    return shops.map((shop, id) => {\n      return React.createElement(ShopItem, {\n        key: id,\n        shop: shop,\n        handleLikeCallback: handleLiked,\n        handleUnLikeCallback: handleUnLiked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      });\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(AlertNotification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"site-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row col-md-12 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, !loading && shops.length > 0 ? renderShopItem() : React.createElement(SpinnerLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }))))));\n};\n\nShopList.propTypes = {\n  attempt: PropTypes.bool,\n  _setAlert: PropTypes.func.isRequired,\n  _getDefaultShopList: PropTypes.func.isRequired,\n  _getMainShopList: PropTypes.func,\n  _likeShop: PropTypes.func,\n  _unLikeShop: PropTypes.func,\n  default_shops: PropTypes.array.isRequired,\n  main_shops: PropTypes.array.isRequired,\n  loading: PropTypes.bool,\n  isAuthentificated: PropTypes.bool\n}; // mappons le state dans les props du component\n\nconst mapStateToProps = state => ({\n  default_shops: state.shop.default_shops_list,\n  main_shops: state.shop.main_shops_list,\n  loading: state.shop.loading,\n  isAuthentificated: state.auth.isAuthentificated,\n  status: state.shop.status\n});\n\nexport default connect(mapStateToProps, {\n  _getDefaultShopList,\n  _getMainShopList,\n  _setAlert,\n  _likeShop,\n  _unLikeShop\n})(ShopList);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/shop/ShopList.js"],"names":["React","Fragment","useEffect","connect","PropTypes","ShopItem","AlertNotification","SpinnerLoader","_setAlert","_getDefaultShopList","_likeShop","_unLikeShop","_getMainShopList","ShopList","location","default_shops","main_shops","loading","status","isAuthentificated","document","title","hasAttempt","attempt","msg","console","log","handleLiked","e","id","handleUnLiked","shops","renderShopItem","map","shop","length","propTypes","bool","func","isRequired","array","mapStateToProps","state","default_shops_list","main_shops_list","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect} from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n//Component\nimport ShopItem from \"./ShopItem\";\nimport AlertNotification from \"../layout/AlertNotification\";\nimport SpinnerLoader from \"../layout/SpinnerLoader\";\n//Actions\nimport { _setAlert } from '../../actions/alert';\nimport { _getDefaultShopList, _likeShop, _unLikeShop,_getMainShopList } from '../../actions/shop'\n\n\n/**\n * ShopList Component:\n * same Component for default-shop and main-shop\n * depending on whether the user is connected or not\n */\n\nconst ShopList = ({ _getDefaultShopList, _getMainShopList, _setAlert, location, default_shops, main_shops, loading, _likeShop, _unLikeShop, status, isAuthentificated }) => {\n\n\n  /**\n   * Hook React \n   * Define lifecycle component() and\n   */\n  useEffect(()=>{\n\n    //Define page's title\n    if (isAuthentificated ? document.title = `Main Page` : document.title = `Default Page`);\n\n    //Load default data shop list\n    _getDefaultShopList();\n\n    _getMainShopList();    \n\n    //Check if the user has been redirected after an unauthorized action\n    let hasAttempt = location.attempt;\n    if (hasAttempt) {\n        _setAlert(\"Unauthorized : You must first be connected\", \"warning\");\n    }\n\n  }, [ ]) //=> specify just for mount and unmount()\n\n\n\n\n  /**\n * Second hook to handle \n * like/unlike actions\n */\n  useEffect(() => {\n\n    //like or dislike\n    if( status.status === 200){\n      _setAlert(\"Success: successful operation... \", \"success\");\n      \n    }\n    //Shop already like or dislike\n    if (status.msg !== null && status.status === 409) {\n      _setAlert(status.msg, \"dark\");\n    }\n    //shop not exist\n    if(status.msg !== null && status.status === 404 ){\n      _setAlert(status.msg, \"danger\");\n\n    }\n    //Server error\n    if (status.msg !== null && status.status === 500) {\n      _setAlert('Echec', \"danger\");\n\n    }\n\n  }, [status, _setAlert]); \n\n\n\n  console.log('Attempted', location.attempt)\n\n\n  /**\n   * LIKE A SHOP\n   * if isAuthentificated: false => call _setAlert() \n   * else call _likeShop()\n   */\n  const handleLiked = (e, id) => {\n   // e.preventDefault();\n    console.log(id)\n\n    if (isAuthentificated){\n      _likeShop(id)\n\n    }else{\n      _setAlert('Unauthorized : You must first be connect', 'warning' )\n    }\n\n  };\n\n\n\n  /**\n   * UNLIKE A SHOP\n   * if isAuthentificated: false => call _setAlert() \n   * else call _unlikeShop()\n   */\n  const handleUnLiked =  (e, id) => {\n    //e.preventDefault();\n    console.log(id)\n\n    if (isAuthentificated) {\n      _unLikeShop(id)\n      //hide id\n\n    } else {\n      _setAlert('Unauthorized : You must first be connect', 'warning')\n    }\n  };\n\n\n\n   /**\n    * Define shop variable\n    * And value assignment\n    */\n  let shops = [];\n  if (isAuthentificated ? (shops = main_shops) : (shops = default_shops));\n\n\n\n  /**\n   * Define () that return \n   * all shops list default from store OR\n   * all shops list without the shops already liked\n   */\n  const renderShopItem =()=>{\n\n      return shops.map((shop, id) => {\n        return <ShopItem\n                  key={id}\n                  shop={shop}\n                  handleLikeCallback={handleLiked}\n                  handleUnLikeCallback={handleUnLiked}\n                />\n      })\n      \n  };\n\n\n\n  \n  return (\n\n    <Fragment>\n      <br/>\n      <AlertNotification />\n\n      <div className=\"site-section\">\n        <div className=\"container\">\n          <div className=\"row\">\n    \n            <div className=\"row col-md-12 \">\n              \n                { !loading && shops.length > 0 ?  renderShopItem() : <SpinnerLoader/> }\n            \n            </div>\n          </div>\n        </div>\n      </div>\n\n    </Fragment>\n  );\n}\n\n\nShopList.propTypes = {\n  attempt: PropTypes.bool,\n\n  _setAlert: PropTypes.func.isRequired,\n  _getDefaultShopList: PropTypes.func.isRequired,\n  _getMainShopList: PropTypes.func,\n  _likeShop: PropTypes.func,\n  _unLikeShop: PropTypes.func,\n\n  default_shops: PropTypes.array.isRequired,\n  main_shops: PropTypes.array.isRequired,\n  loading: PropTypes.bool,\n  isAuthentificated: PropTypes.bool\n};\n\n\n// mappons le state dans les props du component\nconst mapStateToProps = state => ({\n\n    default_shops: state.shop.default_shops_list,\n    main_shops: state.shop.main_shops_list,\n    loading: state.shop.loading,\n    isAuthentificated:  state.auth.isAuthentificated,\n    status :  state.shop.status\n\n});\n\nexport default connect(mapStateToProps, { _getDefaultShopList, _getMainShopList, _setAlert, _likeShop, _unLikeShop })(ShopList);\n"]},"metadata":{},"sourceType":"module"}