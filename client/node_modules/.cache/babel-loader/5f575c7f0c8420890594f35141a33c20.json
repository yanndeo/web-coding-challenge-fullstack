{"ast":null,"code":"var _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/ShopListPreferred.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\"; //Component\n\nimport ShopItem from \"./ShopItem\";\nimport AlertNotification from \"./layout/AlertNotification\"; //Actions\n\nimport { _setAlert } from '../actions/alert';\nimport { _getMyPreferredShops, _removeShop } from \"../actions/shop\";\n\nconst ShopListPreferred = ({\n  shops,\n  loading,\n  _setAlert,\n  _getMyPreferredShops,\n  _removeShoperrors\n}) => {\n  /**\n   * Hook React\n   * Define lifecycle component() and\n   */\n  useEffect(() => {\n    //Define page's title\n    document.title = \"Preferred Shop\"; //Load default data shop list\n\n    _getMyPreferredShops();\n\n    console.log(\"mvmt\");\n  }, []); //=> specify just for mount and unmount()\n\n  /**\n   * Remove A SHOP from prefrerred list\n   * if isAuthentificated: false => call _setAlert()\n   * else call _unlikeShop()\n   */\n\n  const handleRemoveShopFromPreferredList = async (e, id) => {\n    e.preventDefault();\n    console.log(id);\n\n    if (!isAutenthificated) {\n      _removeShop(id);\n    } else {\n      _setAlert(\"Unauthorized : You must first be connect\", \"warning\");\n    }\n  };\n  /**\n   * Define () that return shops list nearby of user\n   * from store\n   */\n\n\n  const renderShopList = () => {\n    return shops.map((shop, id) => {\n      return React.createElement(ShopItem, {\n        key: id,\n        shop: shop,\n        preferred: true,\n        handleRemoveCallback: handleRemoveShopFromPreferredList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    });\n  };\n  /**\n   * Make a spinner for loading store is true\n   */\n\n\n  const renderSpinner = () => {\n    return React.createElement(\"div\", {\n      style: {\n        marginLeft: 473\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/images/spinner.gif\",\n      alt: \"spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  };\n  /**\n   * Handle content\n   * if shop is empty or not\n   * it loading is true or false\n   * component required be connected\n   */\n\n\n  const renderContent = () => {\n    if (!loading) {\n      if (shops === null) {\n        return _setAlert(errors.msg, \"primary\");\n      } else {\n        return renderShopList();\n      }\n    } else {\n      renderSpinner();\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(AlertNotification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"site-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row col-md-12 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, renderContent())))));\n};\n\nShopListPreferred.propTypes = {\n  _setAlert: PropTypes.func.isRequired,\n  _getMyPreferredShops: PropTypes.func.isRequired,\n  _removeShop: PropTypes.func,\n  shops: PropTypes.array,\n  loading: PropTypes.bool,\n  errors: PropTypes.object //isAuthentificated: PropTypes.func.isRequired,\n\n}; // mappons le state dans les props du component\n\nconst mapStateToProps = state => ({\n  shops: state.shop.preferred_shops,\n  loading: state.shop.loading,\n  errors: state.shop.errors,\n  sAuthentificated: state.auth.isAuthentificated,\n  status: state.shop.status\n});\n\nexport default connect(mapStateToProps, {\n  _getMyPreferredShops,\n  _setAlert\n})(ShopListPreferred);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/ShopListPreferred.js"],"names":["React","Fragment","useEffect","connect","PropTypes","ShopItem","AlertNotification","_setAlert","_getMyPreferredShops","_removeShop","ShopListPreferred","shops","loading","_removeShoperrors","document","title","console","log","handleRemoveShopFromPreferredList","e","id","preventDefault","isAutenthificated","renderShopList","map","shop","renderSpinner","marginLeft","renderContent","errors","msg","propTypes","func","isRequired","array","bool","object","mapStateToProps","state","preferred_shops","sAuthentificated","auth","isAuthentificated","status"],"mappings":"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","sourcesContent":["\nimport React, { Fragment, useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n//Component\nimport ShopItem from \"./ShopItem\";\nimport AlertNotification from \"./layout/AlertNotification\";\n//Actions\nimport { _setAlert } from '../actions/alert';\nimport { _getMyPreferredShops, _removeShop } from \"../actions/shop\";\n\n\n\nconst ShopListPreferred = ({\n  shops,\n  loading,\n  _setAlert,\n  _getMyPreferredShops,\n  _removeShoperrors\n}) => {\n  /**\n   * Hook React\n   * Define lifecycle component() and\n   */\n  useEffect(() => {\n    //Define page's title\n    document.title = `Preferred Shop`;\n\n    //Load default data shop list\n    _getMyPreferredShops();\n\n    console.log(\"mvmt\");\n  }, []); //=> specify just for mount and unmount()\n\n  /**\n   * Remove A SHOP from prefrerred list\n   * if isAuthentificated: false => call _setAlert()\n   * else call _unlikeShop()\n   */\n  const handleRemoveShopFromPreferredList = async (e, id) => {\n    e.preventDefault();\n    console.log(id);\n\n    if (!isAutenthificated) {\n      _removeShop(id);\n    } else {\n      _setAlert(\"Unauthorized : You must first be connect\", \"warning\");\n    }\n  };\n\n  /**\n   * Define () that return shops list nearby of user\n   * from store\n   */\n  const renderShopList = () => {\n    return shops.map((shop, id) => {\n      return (\n        <ShopItem\n          key={id}\n          shop={shop}\n          preferred={true}\n          handleRemoveCallback={handleRemoveShopFromPreferredList}\n        />\n      );\n    });\n  };\n\n  /**\n   * Make a spinner for loading store is true\n   */\n  const renderSpinner = () => {\n    return (\n      <div style={{ marginLeft: 473 }}>\n        <img src=\"/images/spinner.gif\" alt=\"spinner\" />\n      </div>\n    );\n  };\n\n  /**\n   * Handle content\n   * if shop is empty or not\n   * it loading is true or false\n   * component required be connected\n   */\n\n  const renderContent = () => {\n    if (!loading) {\n      if (shops === null) {\n        return _setAlert(errors.msg, \"primary\");\n      } else {\n        return renderShopList();\n      }\n    } else {\n      renderSpinner();\n    }\n  };\n\n  return (\n    <Fragment>\n      <AlertNotification />\n\n      <div className=\"site-section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"row col-md-12 \">{renderContent()}</div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\n\nShopListPreferred.propTypes = {\n    _setAlert: PropTypes.func.isRequired,\n    _getMyPreferredShops: PropTypes.func.isRequired,\n    _removeShop: PropTypes.func,\n    shops: PropTypes.array,\n    loading: PropTypes.bool,\n    errors:PropTypes.object,\n    //isAuthentificated: PropTypes.func.isRequired,\n    \n\n};\n\n\n// mappons le state dans les props du component\nconst mapStateToProps = state => ({\n  shops: state.shop.preferred_shops,\n  loading: state.shop.loading,\n  errors: state.shop.errors,\n  sAuthentificated: state.auth.isAuthentificated, \n  status: state.shop.status\n});\n\nexport default connect(mapStateToProps, { _getMyPreferredShops, _setAlert })(ShopListPreferred);\n"]},"metadata":{},"sourceType":"module"}