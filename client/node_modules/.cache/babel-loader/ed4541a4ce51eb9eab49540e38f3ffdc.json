{"ast":null,"code":"import _objectSpread from \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/authentification/LoginModal.js\";\nimport React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from \"reactstrap\"; //Components\n\nimport AlertNotification from '../layout/AlertNotification'; //Actions : _xxYYY\n\nimport { _setIsOpen } from \"../../actions/modal\";\nimport { _login } from '../../actions/auth';\n\nconst LoginModal = ({\n  auth: {\n    isAuthentificated,\n    loading\n  }\n}) => {\n  // const {isAuthentificated} = props;\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formModalData = _useState2[0],\n        setFormModalData = _useState2[1]; // const { email, password } = this.state;\n\n\n  const email = formModalData.email,\n        password = formModalData.password; //close modal : send action redux\n\n  const toggle = () => {\n    props._setIsOpen();\n  }; //Maj state input fields text on change\n\n\n  const onChange = e => {\n    setFormModalData(_objectSpread({}, formModalData, {\n      [e.target.name]: e.target.value\n    }));\n  }; //Call action redux to send request to \"/api/login\"\n\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    console.log('UserLogin:', email, password);\n\n    props._login(email, password);\n  }; //Redirect if logged in\n\n\n  if (props.isAuthentificated) {\n    console.log('auth?: ', props.isAuthentificated);\n    return React.createElement(Redirect, {\n      to: \"/mainpage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n  }\n\n  console.log('modal', props.isOpen);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    isOpen: props.isOpen,\n    toggle: () => toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: () => toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" SIGN IN \")), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(AlertNotification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Form, {\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Label, {\n    for: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"LOGIN\")))))));\n};\n\nLoginModal.propTypes = {\n  _setIsOpen: PropTypes.func.isRequired,\n  //action\n  _login: PropTypes.func.isRequired,\n  //action\n  isAuthentificated: PropTypes.bool,\n  //piece of store\n  isOpen: PropTypes.bool //piece of store\n\n}; // mappons le state dans les props du component.\n\nconst mapStateToProps = state => ({\n  isOpen: state.modal.isOpen,\n  isAuthentificated: state.auth.isAuthentificated\n});\n\nexport default connect(mapStateToProps, {\n  _setIsOpen,\n  _login\n})(LoginModal);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/authentification/LoginModal.js"],"names":["React","Fragment","useState","connect","Redirect","PropTypes","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","AlertNotification","_setIsOpen","_login","LoginModal","auth","isAuthentificated","loading","email","password","formModalData","setFormModalData","toggle","props","onChange","e","target","name","value","onSubmit","preventDefault","console","log","isOpen","propTypes","func","isRequired","bool","mapStateToProps","state","modal"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\n//Components\nimport AlertNotification from '../layout/AlertNotification';\n//Actions : _xxYYY\nimport { _setIsOpen } from \"../../actions/modal\";\nimport { _login } from '../../actions/auth';\n\n\n\nconst LoginModal = ({ auth: { isAuthentificated,loading }}) => {\n\n   // const {isAuthentificated} = props;\n\n    //Hook: Definition of state : [state, setState ] =  useSate(initialize)\n    const [formModalData, setFormModalData] = useState({\n        email: '',\n        password: '',\n    });\n\n\n    // const { email, password } = this.state;\n    const { email, password } = formModalData;\n\n\n    //close modal : send action redux\n    const toggle = () => {\n         props._setIsOpen()\n     };\n\n\n    //Maj state input fields text on change\n    const onChange = (e) => {\n        setFormModalData({\n          ...formModalData,\n          [e.target.name]: e.target.value\n        });\n    };\n\n\n    //Call action redux to send request to \"/api/login\"\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        console.log('UserLogin:',email, password)\n        props._login(email, password);\n\n    }\n\n\n    //Redirect if logged in\n    if(props.isAuthentificated){\n        console.log('auth?: ', props.isAuthentificated)\n\n        return <Redirect to=\"/mainpage\" />\n\n\n    }\n\n    console.log('modal',props.isOpen)\n\n    return (\n\n        <Fragment >\n            <div  >\n\n                <Modal isOpen={props.isOpen} toggle={() => toggle()}  >\n\n                    <ModalHeader toggle={()=>toggle()} >\n                          <span className=\"text-center\"> SIGN IN </span>  \n                    </ModalHeader>\n\n                    <ModalBody>\n\n                        { /** Connected to redux state global*/}\n                        <AlertNotification/>\n\n                        <Form onSubmit={e => onSubmit(e)} >\n                            <FormGroup>\n\n                                <Label for=\"email\">Email</Label>\n                                <Input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                    onChange={(e)=>onChange(e) }\n                                />\n\n                                <Label for=\"name\">Password</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange={(e)=>onChange(e)}\n                                />\n                                <br/>\n\n                                <Button color=\"primary\"block={true}>\n                                    LOGIN\n                                </Button>\n\n                            </FormGroup>\n\n                        </Form>\n\n                        \n                    </ModalBody>\n                </Modal>\n            </div>\n        </Fragment>\n\n    );\n\n\n}\n\nLoginModal.propTypes = {\n    _setIsOpen: PropTypes.func.isRequired,  //action\n    _login: PropTypes.func.isRequired,      //action\n    isAuthentificated: PropTypes.bool,       //piece of store\n    isOpen:PropTypes.bool,                  //piece of store\n\n};\n\n// mappons le state dans les props du component.\nconst mapStateToProps = state => ({\n  isOpen: state.modal.isOpen,\n  isAuthentificated : state.auth.isAuthentificated\n});\n\nexport default connect(mapStateToProps, {_setIsOpen, _login})(LoginModal);"]},"metadata":{},"sourceType":"module"}