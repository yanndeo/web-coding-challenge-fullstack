{"ast":null,"code":"var _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/utils/ErrorBoundary.js\";\nimport React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // On met à jour l’état afin que le prochain rendu affiche\n    // l’UI de remplacement.\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true\n    }); //objet avec une propriété componentStack contenant des informations sur le composant qui a levé l’erreur.\n\n    console.log(\"componentDidCatch_info\", info.componentStack, this.state.hasError); //error - L’erreur qui a été levée.\n\n    console.log(\"componentDidCatch_error\", error, this.state.hasError);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Attention , quelque chose ne va pas\");\n    } else {\n      return this.props.children;\n    }\n  }\n\n}\n\nexport default ErrorBoundary;\n/**\n * Les périmètres d’erreurs (error boundaries, NdT) sont des composants React \n * qui interceptent toute erreur JavaScript survenant dans l’arbre de composants \n * de leurs enfants, loguent ces erreurs, et affichent une UI de remplacement au lieu \n * de l’arbre de composants qui a planté.\n\n */","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/utils/ErrorBoundary.js"],"names":["React","Component","ErrorBoundary","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","info","setState","console","log","componentStack","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAElCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAED,SAAOC,wBAAP,CAAgCC,KAAhC,EAAuC;AACnC;AACA;AACA,WAAO;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACH;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,IAAR,EAAc;AAE3B,SAAKC,QAAL,CAAc;AAACL,MAAAA,QAAQ,EAAG;AAAZ,KAAd,EAF2B,CAI3B;;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCH,IAAI,CAACI,cAA3C,EAA2D,KAAKT,KAAL,CAAWC,QAAtE,EAL2B,CAM3B;;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCL,KAAvC,EAA8C,KAAKH,KAAL,CAAWC,QAAzD;AAEH;;AAGDS,EAAAA,MAAM,GAAI;AACN,QAAG,KAAKV,KAAL,CAAWC,QAAd,EAAuB;AACnB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAP;AACH,KAFD,MAEK;AACD,aAAO,KAAKF,KAAL,CAAWY,QAAlB;AACH;AAEJ;;AAlCiC;;AAqCtC,eAAed,aAAf;AAGA","sourcesContent":["import React, { Component } from 'react'\n\nclass ErrorBoundary extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    static getDerivedStateFromError(error) {\n        // On met à jour l’état afin que le prochain rendu affiche\n        // l’UI de remplacement.\n        return { hasError: true };\n    };\n\n    componentDidCatch(error, info) {\n\n        this.setState({hasError : true })\n\n        //objet avec une propriété componentStack contenant des informations sur le composant qui a levé l’erreur.\n        console.log(\"componentDidCatch_info\", info.componentStack, this.state.hasError);\n        //error - L’erreur qui a été levée.\n        console.log(\"componentDidCatch_error\", error, this.state.hasError);\n\n    }\n\n\n    render () {\n        if(this.state.hasError){\n            return <div>Attention , quelque chose ne va pas</div>; \n        }else{\n            return this.props.children\n        }\n       \n    }\n}\n\nexport default ErrorBoundary\n\n\n/**\n * Les périmètres d’erreurs (error boundaries, NdT) sont des composants React \n * qui interceptent toute erreur JavaScript survenant dans l’arbre de composants \n * de leurs enfants, loguent ces erreurs, et affichent une UI de remplacement au lieu \n * de l’arbre de composants qui a planté.\n\n */"]},"metadata":{},"sourceType":"module"}