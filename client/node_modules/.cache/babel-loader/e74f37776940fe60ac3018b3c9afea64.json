{"ast":null,"code":"var _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/ShopListPreferred.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\"; //Component\n\nimport ShopItem from \"./ShopItem\";\nimport SubNavbar from \"./layout/SubNavbar\";\nimport AlertNotification from \"./layout/AlertNotification\"; //Actions\n\nimport { _setAlert } from '../actions/alert';\nimport { _getMyPreferredShops } from \"../actions/shop\";\n\nconst ShopListPreferred = ({\n  shops,\n  loading,\n  _setAlert,\n  _getMyPreferredShops\n}) => {\n  /**\n   * Hook React \n   * Define lifecycle component() and\n   */\n  useEffect(() => {\n    //Define page's title\n    //document.title = `Preferred Shop`;\n    //Load default data shop list calling action redux\n    if (shops.length > 0) {\n      _getMyPreferredShops();\n    }\n  }, []); //=> specify just for mount and unmount()\n\n  console.log('shops_preferred', shops);\n  /**\n   * Like a shop\n   * if isAuthentificated: false => call _setAlert() \n   * else call _likeShop()\n   */\n\n  /**\n   * Define () that return all shops list default\n   * from store \n   */\n\n  const renderShopItem = () => {\n    return shops.map((shop, id) => {\n      return React.createElement(ShopItem, {\n        key: id,\n        shop: shop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    });\n  };\n  /**\n   * Make a spinner for loading store is true\n   */\n\n\n  const renderSpinner = () => {\n    return React.createElement(\"div\", {\n      style: {\n        marginLeft: 473\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/images/spinner.gif\",\n      alt: \"spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  };\n  /**\n   * \n   */\n\n\n  const renderContent = () => {\n    if (!loading) {\n      if (shops === null) {\n        _setAlert(\"You still have nothing in your favorites.\", 'primary');\n      } else {\n        renderShopItem();\n      }\n    } else {\n      renderSpinner();\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(SubNavbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(AlertNotification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"site-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row col-md-12 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, renderContent())))));\n};\n\nShopListPreferred.propTypes = {\n  _setAlert: PropTypes.func.isRequired,\n  _getMyPreferredShops: PropTypes.func.isRequired,\n  shops: PropTypes.array,\n  loading: PropTypes.bool //isAuthentificated: PropTypes.func.isRequired,\n\n}; // mappons le state dans les props du component\n\nconst mapStateToProps = state => ({\n  shops: state.shop.preferred_shops,\n  loading: state.shop.loading // isAuthentificated: state.auth.isAuthentificated\n\n});\n\nexport default connect(mapStateToProps, {\n  _getMyPreferredShops,\n  _setAlert\n})(ShopListPreferred);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/ShopListPreferred.js"],"names":["React","Fragment","useEffect","Link","connect","PropTypes","ShopItem","SubNavbar","AlertNotification","_setAlert","_getMyPreferredShops","ShopListPreferred","shops","loading","length","console","log","renderShopItem","map","shop","id","renderSpinner","marginLeft","renderContent","propTypes","func","isRequired","array","bool","mapStateToProps","state","preferred_shops"],"mappings":"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","sourcesContent":["\nimport React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n//Component\nimport ShopItem from \"./ShopItem\";\nimport SubNavbar from \"./layout/SubNavbar\";\nimport AlertNotification from \"./layout/AlertNotification\";\n//Actions\nimport { _setAlert } from '../actions/alert';\nimport { _getMyPreferredShops } from \"../actions/shop\";\n\n\n\nconst ShopListPreferred = ({ shops, loading, _setAlert, _getMyPreferredShops }) => {\n\n    /**\n     * Hook React \n     * Define lifecycle component() and\n     */\n    useEffect(() => {\n      //Define page's title\n      //document.title = `Preferred Shop`;\n      //Load default data shop list calling action redux\n      if(shops.length > 0){\n          _getMyPreferredShops();\n\n      }\n    }, []); //=> specify just for mount and unmount()\n\n\n\n    console.log('shops_preferred', shops)\n\n    /**\n     * Like a shop\n     * if isAuthentificated: false => call _setAlert() \n     * else call _likeShop()\n     */\n\n\n\n    /**\n     * Define () that return all shops list default\n     * from store \n     */\n    const renderShopItem = () => {\n        return shops.map((shop, id) => {\n            return <ShopItem key={id} shop={shop} />\n\n        })\n    };\n\n    /**\n     * Make a spinner for loading store is true\n     */\n    const renderSpinner = () => {\n        return (<div style={{ marginLeft: 473, }}>\n            <img src=\"/images/spinner.gif\" alt=\"spinner\" />\n        </div>)\n    }\n\n\n    /**\n     * \n     */\n\n    const renderContent = ()=>{\n\n        if(!loading){\n\n            if (shops === null) {\n                 _setAlert(\"You still have nothing in your favorites.\", 'primary')\n\n            }else{\n                renderShopItem()\n            }\n\n        }else{\n            renderSpinner()\n        }\n       \n    }\n\n\n\n\n\n    return (\n\n        <Fragment>\n            <SubNavbar />\n\n            <AlertNotification />\n\n            <div className=\"site-section\">\n                <div className=\"container\">\n                    <div className=\"row\">\n\n                        <div className=\"row col-md-12 \">\n                            { renderContent() }\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\n\nShopListPreferred.propTypes = {\n    _setAlert: PropTypes.func.isRequired,\n    _getMyPreferredShops: PropTypes.func.isRequired,\n    shops: PropTypes.array,\n    loading: PropTypes.bool,\n    //isAuthentificated: PropTypes.func.isRequired,\n\n};\n\n\n// mappons le state dans les props du component\nconst mapStateToProps = state => ({\n  shops: state.shop.preferred_shops,\n  loading: state.shop.loading,\n // isAuthentificated: state.auth.isAuthentificated\n});\n\nexport default connect(mapStateToProps, { _getMyPreferredShops, _setAlert })(ShopListPreferred);\n"]},"metadata":{},"sourceType":"module"}