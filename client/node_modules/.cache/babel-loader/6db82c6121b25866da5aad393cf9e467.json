{"ast":null,"code":"var _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/App.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from './store/index'; //Component\n\nimport LoginModal from './components/authentification/LoginModal'; //Actions\n\nimport { _loadUser } from \"./actions/auth\"; //Utils\n\nimport configTokenInHeader from \"./utils/configTokenInHeader\";\nimport ErrorBoundary from \"./utils/ErrorBoundary\"; //Routing\n\nimport Routes from './routing/routes';\n\nif (localStorage.token) {\n  configTokenInHeader(localStorage.token);\n}\n\nconst App = props => {\n  // Hook react : componentDidUpdate/componentDidUpdate/componentWillUnmount\n  useEffect(() => {\n    store.dispatch(_loadUser());\n  }, []); //[]=> exécuter un effet une seule fois au montage puis au démontage.\n\n  useEffect(() => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n      dispatch(loadUser());\n    }\n  }, [dispatch]);\n  return React.createElement(ErrorBoundary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Route, {\n    component: Routes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(LoginModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/App.js"],"names":["React","Fragment","useEffect","BrowserRouter","Router","Route","Switch","Provider","store","LoginModal","_loadUser","configTokenInHeader","ErrorBoundary","Routes","localStorage","token","App","props","dispatch","setAuthToken","loadUser"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,0CAAvB,C,CACA;;AACA,SAASC,SAAT,QAA0B,gBAA1B,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;AACA,OAAOC,aAAP,MAA0B,uBAA1B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAGA,IAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,EAAAA,mBAAmB,CAACG,YAAY,CAACC,KAAd,CAAnB;AAED;;AAGD,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAGrB;AACAf,EAAAA,SAAS,CAAC,MAAI;AACZM,IAAAA,KAAK,CAACU,QAAN,CAAeR,SAAS,EAAxB;AAED,GAHQ,EAGN,EAHM,CAAT,CAJqB,CAOb;;AAERR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,YAAY,CAACC,KAAjB,EAAwB;AACtBI,MAAAA,YAAY,CAACL,YAAY,CAACC,KAAd,CAAZ;AACAG,MAAAA,QAAQ,CAACE,QAAQ,EAAT,CAAR;AACD;AACF,GALQ,EAKN,CAACF,QAAD,CALM,CAAT;AAOA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEK,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,CADF,CADF;AAcD,CA9BD;;AA0CA,eAAeG,GAAf","sourcesContent":["import React,{ Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from './store/index';\n//Component\nimport LoginModal from './components/authentification/LoginModal';\n//Actions\nimport { _loadUser } from \"./actions/auth\";\n//Utils\nimport configTokenInHeader from \"./utils/configTokenInHeader\";\nimport ErrorBoundary from \"./utils/ErrorBoundary\";\n//Routing\nimport Routes from './routing/routes';\n\n\nif (localStorage.token) {\n  configTokenInHeader(localStorage.token);\n\n}\n\n\nconst App = (props) => {\n\n\n  // Hook react : componentDidUpdate/componentDidUpdate/componentWillUnmount\n  useEffect(()=>{\n    store.dispatch(_loadUser() );\n\n  }, []); //[]=> exécuter un effet une seule fois au montage puis au démontage.\n\n  useEffect(() => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n      dispatch(loadUser());\n    }\n  }, [dispatch]);\n\n  return (\n    <ErrorBoundary>\n      <Provider store={store}>\n        <Router>\n          <Fragment>\n            <Switch>\n              <Route component={Routes} />\n            </Switch>\n            <LoginModal />\n          </Fragment>\n        </Router>\n      </Provider>\n    </ErrorBoundary>\n  );\n}\n\n\n\n\n\n\n\n\n  \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}