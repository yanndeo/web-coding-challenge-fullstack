{"ast":null,"code":"import axios from 'axios';\nimport { GET_DEFAULT_LIST_SHOPS, GET_PREFERRED_SHOPS, GET_NEARBY_SHOPS, REMOVE_SHOPS_USER_RELATED, ERROR_SHOPS } from \"./types\"; //Utils\n\nimport { API_URI } from '../utils/uri'; //Ohers actions\n\nimport { _setAlert } from \"./alert\";\n/**\n * Default shop list.\n * without criterias\n */\n\nexport const _getDefaultShopList = () => async dispatch => {\n  try {\n    const response = await axios.get(\"\".concat(API_URI, \"/shops/default\"));\n    dispatch({\n      type: GET_DEFAULT_LIST_SHOPS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ERROR_SHOPS,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n};\n/**\n * Get preferred shop of user connected\n * usermust connected\n */\n\nexport const _getMyPreferredShops = () => async dispatch => {\n  try {\n    const response = await axios.get(\"\".concat(API_URI, \"/preferred\"));\n    console.log('favorites_shop', res);\n    dispatch({\n      type: GET_PREFERRED_SHOPS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR_SHOPS,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/actions/shop.js"],"names":["axios","GET_DEFAULT_LIST_SHOPS","GET_PREFERRED_SHOPS","GET_NEARBY_SHOPS","REMOVE_SHOPS_USER_RELATED","ERROR_SHOPS","API_URI","_setAlert","_getDefaultShopList","dispatch","response","get","type","payload","data","error","console","log","msg","statusText","status","_getMyPreferredShops","res"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,sBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,yBAJF,EAKEC,WALF,QAMO,SANP,C,CAOA;;AACA,SAASC,OAAT,QAAwB,cAAxB,C,CACA;;AACA,SAASC,SAAT,QAA0B,SAA1B;AAIA;;;;;AAIA,OAAO,MAAMC,mBAAmB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAEvD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,WAAaL,OAAb,oBAAvB;AAEAG,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEX,sBADC;AAEPY,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,KAAD,CAAR;AAKH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,WADD;AAELQ,MAAAA,OAAO,EAAE;AAAEK,QAAAA,GAAG,EAAEH,KAAK,CAACL,QAAN,CAAeS,UAAtB;AAAkCC,QAAAA,MAAM,EAAEL,KAAK,CAACL,QAAN,CAAeU;AAAzD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAlBM;AAsBP;;;;;AAIA,OAAO,MAAMC,oBAAoB,GAAG,MAAM,MAAMZ,QAAN,IAAkB;AAExD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,WAAaL,OAAb,gBAAvB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BK,GAA9B;AACAb,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACV,mBADA;AAELW,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFb,KAAD,CAAR;AAKH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACP,WADA;AAELQ,MAAAA,OAAO,EAAE;AAAEK,QAAAA,GAAG,EAAEH,KAAK,CAACL,QAAN,CAAeS,UAAtB;AAAmCC,QAAAA,MAAM,EAAEL,KAAK,CAACL,QAAN,CAAeU;AAA1D;AAFJ,KAAD,CAAR;AAIH;AAEJ,CAjBM","sourcesContent":["import axios from 'axios';\nimport {\n  GET_DEFAULT_LIST_SHOPS,\n  GET_PREFERRED_SHOPS,\n  GET_NEARBY_SHOPS,\n  REMOVE_SHOPS_USER_RELATED,\n  ERROR_SHOPS\n} from \"./types\";\n//Utils\nimport { API_URI } from '../utils/uri';\n//Ohers actions\nimport { _setAlert } from \"./alert\";\n\n\n\n/**\n * Default shop list.\n * without criterias\n */\nexport const _getDefaultShopList = () => async dispatch => {\n\n    try {\n        const response = await axios.get(`${API_URI}/shops/default`);\n\n        dispatch({\n          type: GET_DEFAULT_LIST_SHOPS,\n          payload: response.data\n        });  \n\n    } catch (error) {\n        console.log(error);\n\n        dispatch({\n            type: ERROR_SHOPS,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        })\n    }\n}\n\n\n\n/**\n * Get preferred shop of user connected\n * usermust connected\n */\nexport const _getMyPreferredShops = () => async dispatch => {\n\n    try {\n        const response = await axios.get(`${API_URI}/preferred`);\n        console.log('favorites_shop', res)\n        dispatch({\n            type:GET_PREFERRED_SHOPS,\n            payload: response.data\n        });\n\n    } catch (error) {\n        dispatch({\n            type:ERROR_SHOPS,\n            payload: { msg: error.response.statusText , status: error.response.status }\n        })\n    }\n\n};"]},"metadata":{},"sourceType":"module"}