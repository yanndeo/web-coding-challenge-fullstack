{"ast":null,"code":"var _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/ShopListPreferred.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\"; //Component\n\nimport ShopItem from \"./ShopItem\";\nimport SubNavbar from \"./layout/SubNavbar\";\nimport AlertNotification from \"./layout/AlertNotification\"; //Actions\n\nimport { _setAlert } from '../actions/alert';\nimport { _getMyPreferredShops } from \"../actions/shop\";\n\nconst ShopListPreferred = ({\n  shops,\n  loading,\n  _setAlert,\n  _getMyPreferredShops\n}) => {\n  /**\n   * Hook React\n   * Define lifecycle component() and\n   */\n  useEffect(() => {\n    //Define page's title\n    document.title = \"Preferred Shop\"; //Load default data shop list calling action redux\n\n    _getMyPreferredShops();\n  }, [_getMyPreferredShops]); //=> specify just for mount and unmount()\n  //console.log('shops_preferred', shops)\n\n  /**\n   * Like a shop\n   * if isAuthentificated: false => call _setAlert()\n   * else call _likeShop()\n   */\n\n  /**\n   * Define () that return shops list nearby\n   * from store\n   */\n\n  const renderShopItem = () => {\n    return shops.map((shop, id) => {\n      return React.createElement(ShopItem, {\n        key: id,\n        shop: shop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    });\n  };\n  /**\n   * Make a spinner for loading store is true\n   */\n\n\n  const renderSpinner = () => {\n    return React.createElement(\"div\", {\n      style: {\n        marginLeft: 473\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/images/spinner.gif\",\n      alt: \"spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  };\n  /**\n   *\n   */\n\n\n  const renderContent = () => {\n    if (!loading) {\n      if (shops === null) {\n        _setAlert(\"You still have nothing in your favorites.\", \"primary\");\n      } else {\n        renderShopItem();\n      }\n    } else {\n      renderSpinner();\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(SubNavbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(AlertNotification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"site-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row col-md-12 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, renderContent())))));\n};\n\nShopListPreferred.propTypes = {\n  _setAlert: PropTypes.func.isRequired,\n  _getMyPreferredShops: PropTypes.func.isRequired,\n  shops: PropTypes.array,\n  loading: PropTypes.bool //isAuthentificated: PropTypes.func.isRequired,\n\n}; // mappons le state dans les props du component\n\nconst mapStateToProps = state => ({\n  shops: state.shop.preferred_shops,\n  loading: state.shop.loading // isAuthentificated: state.auth.isAuthentificated\n\n});\n\nexport default connect(mapStateToProps, {\n  _getMyPreferredShops,\n  _setAlert\n})(ShopListPreferred);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/ShopListPreferred.js"],"names":["React","Fragment","useEffect","connect","PropTypes","ShopItem","SubNavbar","AlertNotification","_setAlert","_getMyPreferredShops","ShopListPreferred","shops","loading","document","title","renderShopItem","map","shop","id","renderSpinner","marginLeft","renderContent","propTypes","func","isRequired","array","bool","mapStateToProps","state","preferred_shops"],"mappings":"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","sourcesContent":["\nimport React, { Fragment, useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n//Component\nimport ShopItem from \"./ShopItem\";\nimport SubNavbar from \"./layout/SubNavbar\";\nimport AlertNotification from \"./layout/AlertNotification\";\n//Actions\nimport { _setAlert } from '../actions/alert';\nimport { _getMyPreferredShops } from \"../actions/shop\";\n\n\n\nconst ShopListPreferred = ({ shops, loading, _setAlert, _getMyPreferredShops }) => {\n                                                                                     /**\n                                                                                      * Hook React\n                                                                                      * Define lifecycle component() and\n                                                                                      */\n                                                                                     useEffect(() => {\n                                                                                        //Define page's title\n                                                                                       document.title = `Preferred Shop`;\n                                                                                       //Load default data shop list calling action redux\n                                                                                       _getMyPreferredShops();\n                                                                                     }, [\n                                                                                       _getMyPreferredShops\n                                                                                     ]); //=> specify just for mount and unmount()\n\n                                                                                     //console.log('shops_preferred', shops)\n\n                                                                                     /**\n                                                                                      * Like a shop\n                                                                                      * if isAuthentificated: false => call _setAlert()\n                                                                                      * else call _likeShop()\n                                                                                      */\n\n                                                                                     /**\n                                                                                      * Define () that return shops list nearby\n                                                                                      * from store\n                                                                                      */\n                                                                                     const renderShopItem = () => {\n                                                                                       return shops.map(\n                                                                                         (\n                                                                                           shop,\n                                                                                           id\n                                                                                         ) => {\n                                                                                           return (\n                                                                                             <ShopItem\n                                                                                               key={\n                                                                                                 id\n                                                                                               }\n                                                                                               shop={\n                                                                                                 shop\n                                                                                               }\n                                                                                             />\n                                                                                           );\n                                                                                         }\n                                                                                       );\n                                                                                     };\n\n                                                                                     /**\n                                                                                      * Make a spinner for loading store is true\n                                                                                      */\n                                                                                     const renderSpinner = () => {\n                                                                                       return (\n                                                                                         <div\n                                                                                           style={{\n                                                                                             marginLeft: 473\n                                                                                           }}\n                                                                                         >\n                                                                                           <img\n                                                                                             src=\"/images/spinner.gif\"\n                                                                                             alt=\"spinner\"\n                                                                                           />\n                                                                                         </div>\n                                                                                       );\n                                                                                     };\n\n                                                                                     /**\n                                                                                      *\n                                                                                      */\n\n                                                                                     const renderContent = () => {\n                                                                                       if (\n                                                                                         !loading\n                                                                                       ) {\n                                                                                         if (\n                                                                                           shops ===\n                                                                                           null\n                                                                                         ) {\n                                                                                           _setAlert(\n                                                                                             \"You still have nothing in your favorites.\",\n                                                                                             \"primary\"\n                                                                                           );\n                                                                                         } else {\n                                                                                           renderShopItem();\n                                                                                         }\n                                                                                       } else {\n                                                                                         renderSpinner();\n                                                                                       }\n                                                                                     };\n\n                                                                                     return (\n                                                                                       <Fragment>\n                                                                                         <SubNavbar />\n\n                                                                                         <AlertNotification />\n\n                                                                                         <div className=\"site-section\">\n                                                                                           <div className=\"container\">\n                                                                                             <div className=\"row\">\n                                                                                               <div className=\"row col-md-12 \">\n                                                                                                 {renderContent()}\n                                                                                               </div>\n                                                                                             </div>\n                                                                                           </div>\n                                                                                         </div>\n                                                                                       </Fragment>\n                                                                                     );\n                                                                                   }\n\n\nShopListPreferred.propTypes = {\n    _setAlert: PropTypes.func.isRequired,\n    _getMyPreferredShops: PropTypes.func.isRequired,\n    shops: PropTypes.array,\n    loading: PropTypes.bool,\n    //isAuthentificated: PropTypes.func.isRequired,\n\n};\n\n\n// mappons le state dans les props du component\nconst mapStateToProps = state => ({\n  shops: state.shop.preferred_shops,\n  loading: state.shop.loading,\n // isAuthentificated: state.auth.isAuthentificated\n});\n\nexport default connect(mapStateToProps, { _getMyPreferredShops, _setAlert })(ShopListPreferred);\n"]},"metadata":{},"sourceType":"module"}