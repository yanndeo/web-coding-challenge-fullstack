{"ast":null,"code":"var _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/ShopListPreferred.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\"; //Component\n\nimport ShopItem from \"./ShopItem\";\nimport SubNavbar from \"./layout/SubNavbar\";\nimport AlertNotification from \"./layout/AlertNotification\"; //Actions\n\nimport { _setAlert } from '../actions/alert';\nimport { _getMyPreferredShops } from \"../actions/shop\";\n\nconst ShopListPreferred = props => {\n  /**\n   * Hook React \n   * Define lifecycle component() and\n   */\n  useEffect(() => {\n    //Define page's title\n    document.title = \"Preferred Shop\"; //Load default data shop list calling action redux\n\n    props._getMyPreferredShops();\n  }, []); //=> specify just for mount and unmount()\n\n  console.log('shops_preferred', props.shops);\n  /**\n   * Like a shop\n   * if isAuthentificated: false => call _setAlert() \n   * else call _likeShop()\n   */\n\n  /**\n   * Define () that return all shops list default\n   * from store \n   */\n\n  const renderShopItem = () => {\n    return props.shops.map((shop, id) => {\n      return React.createElement(ShopItem, {\n        key: id,\n        shop: shop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    });\n  };\n  /**\n   * Make a spinner for loading store is true\n   */\n\n\n  const renderSpinner = () => {\n    return React.createElement(\"div\", {\n      style: {\n        marginLeft: 473\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/images/spinner.gif\",\n      alt: \"spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(SubNavbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(AlertNotification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"site-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row col-md-12 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, props.shops !== null ? renderShopItem() : props._setAlert())))));\n};\n\nShopListPreferred.propTypes = {\n  _setAlert: PropTypes.func.isRequired,\n  _getMyPreferredShops: PropTypes.func.isRequired,\n  shops: PropTypes.array.isRequired,\n  loading: PropTypes.bool\n}; // mappons le state dans les props du component\n\nconst mapStateToProps = state => ({\n  shops: state.shop.preferred_shops,\n  //not possibiility to make hoc of all list shop because ,state.shop.xxxx is different.\n  loading: state.shop.loading\n});\n\nexport default connect(mapStateToProps, {\n  _getMyPreferredShops,\n  _setAlert\n})(ShopListPreferred);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_LIST_SHOPS_APP/client/src/components/ShopListPreferred.js"],"names":["React","Fragment","useEffect","Link","connect","PropTypes","ShopItem","SubNavbar","AlertNotification","_setAlert","_getMyPreferredShops","ShopListPreferred","props","document","title","console","log","shops","renderShopItem","map","shop","id","renderSpinner","marginLeft","propTypes","func","isRequired","array","loading","bool","mapStateToProps","state","preferred_shops"],"mappings":"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","sourcesContent":["\nimport React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n//Component\nimport ShopItem from \"./ShopItem\";\nimport SubNavbar from \"./layout/SubNavbar\";\nimport AlertNotification from \"./layout/AlertNotification\";\n//Actions\nimport { _setAlert } from '../actions/alert';\nimport { _getMyPreferredShops } from \"../actions/shop\";\n\n\n\nconst ShopListPreferred = (props) => {\n\n    /**\n     * Hook React \n     * Define lifecycle component() and\n     */\n    useEffect(() => {\n\n        //Define page's title\n        document.title = `Preferred Shop`;\n\n        //Load default data shop list calling action redux\n        props._getMyPreferredShops()\n\n    }, []) //=> specify just for mount and unmount()\n\n\n\n    console.log('shops_preferred', props.shops)\n\n    /**\n     * Like a shop\n     * if isAuthentificated: false => call _setAlert() \n     * else call _likeShop()\n     */\n\n\n\n    /**\n     * Define () that return all shops list default\n     * from store \n     */\n    const renderShopItem = () => {\n        return props.shops.map((shop, id) => {\n            return <ShopItem key={id} shop={shop} />\n\n        })\n    };\n\n    /**\n     * Make a spinner for loading store is true\n     */\n    const renderSpinner = () => {\n        return (<div style={{ marginLeft: 473, }}>\n            <img src=\"/images/spinner.gif\" alt=\"spinner\" />\n        </div>)\n    }\n\n\n    return (\n\n        <Fragment>\n            <SubNavbar />\n\n            <AlertNotification />\n\n            <div className=\"site-section\">\n                <div className=\"container\">\n                    <div className=\"row\">\n\n                        <div className=\"row col-md-12 \">\n\n                            {props.shops !== null ? renderShopItem() : props._setAlert()}\n\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\n\nShopListPreferred.propTypes = {\n    _setAlert: PropTypes.func.isRequired,\n    _getMyPreferredShops: PropTypes.func.isRequired,\n    shops: PropTypes.array.isRequired,\n    loading: PropTypes.bool,\n\n};\n\n\n// mappons le state dans les props du component\nconst mapStateToProps = state => ({\n    shops: state.shop.preferred_shops, //not possibiility to make hoc of all list shop because ,state.shop.xxxx is different.\n    loading: state.shop.loading,\n});\n\nexport default connect(mapStateToProps, { _getMyPreferredShops, _setAlert })(ShopListPreferred);\n"]},"metadata":{},"sourceType":"module"}